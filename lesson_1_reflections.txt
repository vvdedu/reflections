How could having easy access to the entire history of a file make you a more efficient programmer in the long term?

For example i can see what kind of errors i make mostly.
I can revert any changes easly, and not just a previous one.
If any useful code was in the previous versions but it had to be cleared out, i can still easly get it from the version control system.

What do you think are the pros and cons of manually choosing when to create a commit, like you do in Git, vs having versions automatically saved, like Google docs does?

Good question. The only advantage of the automatic saving is that if there is some emergency when the computers stops, the automatic saving can save your life. But this may be the only advantage of that. Every other pro goes to the manual way.

Why do you think some version control systems, like Git, allow saving multiple files in one commit, while others, like Google Docs, treat each file separately?

Because version control systems are used in project, which usually consist multiple files. While programs like Google Docs works files completely separately, they dont manage any connections between files.

How can you use the commands git log and git diff to view the history of files?

I cannot understand the question properly. I think the gui version of git or tfs is musch better and easier.

How might using version control make you more confident to make changes that could break something?

It is fairly simple. If i make something wrong, i can revert it with very easy, see what is the mistake and fix it on the latest commit. Its not a big deal :)